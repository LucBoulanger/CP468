
How A* should search potential path:
-Start point (given coordinate)
-see all possible moves
-eliminate anything moves blocked by obstacle 
-pick least expensive move (one that goes towards the rendezvous point)
	-if any of the next moves only result in more expensive moves back track
	-pick next least expensive move
-repeat until rendezvous is achieved

start point (coordinate)
-possible moves put into potential move array
-remove any blocked moves from potential move array
-save path taken in seperate array (used for backtracking)
-next move should be removed potential move array added to taken path array
-find next least expensive move from potential move array
-loop until rendezvous point is met
